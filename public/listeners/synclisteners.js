
/*!
 * Sync Listeners, v0.1
 *
 * Copyright (c) 2013 Dave Olsen, http://dmolsen.com
 * Licensed under the MIT license
 *
 * The JavaScript component of the WebSocket set-up that supports syncing
 * navigation between browsers and content updates with the server.
 *
 * The WebSocket test is from Modernizr. It might be a little too strict for our purposes.
 * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/websockets.js
 *
 */

var wsn;
var wsnConnected = false;
var wsc;
var wscConnected = false;
var dataPrevious = 0;
var host = window.location.host;

// handle page updates from one browser to another
function connectNavSync() {

	if ('WebSocket' in window && window.WebSocket.CLOSING === 2) {
		
		wsn = new WebSocket("ws://"+host+":"+navSyncPort+"/navsync");

		wsn.onopen = function (event) {
			wsnConnected = true;
			$('#navSyncButton').attr("data-state","on");
			$('#navSyncButton').addClass("connected");
			$('#navSyncButton').html('Nav Sync On');
		}
		
		wsn.onclose = function (event) {
			$('#navSyncButton').attr("data-state","off");
			if ($('#navSyncButton').hasClass("connected")) {
				$('#navSyncButton').removeClass("connected");
			}
			$('#navSyncButton').html('Nav Sync Disabled');
		}
		
		wsn.onmessage = function (event) {
			$sgViewport.attr('src',event.data+'?'+dataPrevious);
		}
		
		wsn.onerror = function (event) {
			$('#navSyncButton').attr("data-state","off");
			if ($('#navSyncButton').hasClass("connected")) {
				$('#navSyncButton').removeClass("connected");
			}
			$('#navSyncButton').html('Nav Sync Disabled');
		}
		
	}
	
}
connectNavSync();

// handle content updates generated by the watch
function connectContentSync() {
	
	if ('WebSocket' in window && window.WebSocket.CLOSING === 2) {
		
		var dc = true;
		wsc = new WebSocket("ws://"+host+":"+contentSyncPort+"/contentsync");
	
		wsc.onopen = function (event) {
			wscConnected = true;
			$('#contentSyncButton').attr("data-state","on");
			$('#contentSyncButton').addClass("connected");
			$('#contentSyncButton').html('Content Sync On');
		}
		
		wsc.onclose = function (event) {
			$('#contentSyncButton').attr("data-state","off");
			if ($('#contentSyncButton').hasClass("connected")) {
				$('#contentSyncButton').removeClass("connected");
			}
			$('#contentSyncButton').html('Content Sync Disabled');
		}
		
		wsc.onmessage = function (event) {
			
			if (dc !== false) {
				if (event.data != dataPrevious) {
					$sgViewport.attr('src',$sgViewport.attr('src')+'?'+event.data);
					dataPrevious = event.data;
				}
			} else {
				dc = true;
				dataPrevious = event.data;
			}
		
		}
	
		wsc.onerror = function (event) {
			console.log("error");
			$('#contentSyncButton').attr("data-state","off");
			if ($('#contentSyncButton').hasClass("connected")) {
				$('#contentSyncButton').removeClass("connected");
			}
			$('#contentSyncButton').html('Content Sync Disabled');
		}
		
	}
	
}
connectContentSync();

$('#navSyncButton').click(function() {
	if ($(this).attr("data-state") == "on") {
		wsn.close();
		$(this).attr("data-state","off");
		$(this).removeClass("connected");
		$(this).html('Nav Sync Off');
	} else {
		connectNavSync();
		$(this).attr("data-state","on");
		$(this).addClass("connected");
		$(this).html('Nav Sync On');
	}
});

$('#contentSyncButton').click(function() {
	if ($(this).attr("data-state") == "on") {
		wsc.close();
		$(this).attr("data-state","off");
		$(this).removeClass("connected");
		$(this).html('Content Sync Off');
	} else {
		connectContentSync();
		$(this).attr("data-state","on");
		$(this).addClass("connected");
		$(this).html('Content Sync On');
	}
});
